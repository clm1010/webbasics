MVVM框架
一、了解MVVM框架吗？
Vue.js React.js Angular.js

二、对MVVM的认识？
M -> Model
V -> View
VM -> ViewModel

Model <——> ViewModel <——> View
Model 可以理解成服务器业务某一块操作
ViewModel 就是我们看到的这个Vue框架，它处理的就是View和Model核心枢纽。
View 就是看到的页面展现形态

三、双向绑定的原理
1、双向
view -> data 反向
data -> view 正向（数据驱动页面）

2、绑定
之前传统手工做法例如：绑定input事件在事件响应中写程序获取变量然后在赋值给data。

现在的MVVM自动化处理

核心API Object.defineProperty 做到的

四、设计模式
  观察者模式
Data的变化  Observer监听Data 通知——> Dep ——> 回调 Watcher ——> 订阅Dep
Watcher 更新——> View

五、生命周期
  beforeCreate    Vue对象用新方法实例化。
  created         实例已经创建完成之后被调用。
  beforeMount     在挂载开始之前被调用：相关的 render 函数首次被调用
  Mounted         el 被新创建的 vm.$el 替换，并挂载到实例上去之后调用该钩子。如果 root 实例挂载了一个文档内元素，当 mounted 被调用时 vm.$el 也在文档内。
  beforeUpdate    数据更新时调用，发生在虚拟 DOM 重新渲染和打补丁之前。你可以在这个钩子中进一步地更改状态，这不会触发附加的重渲染过程。
  updated         由于数据更改导致的虚拟 DOM 重新渲染和打补丁，在这之后会调用该钩子。当这个钩子被调用时，组件 DOM 已经更新，所以你现在可以执行依赖于 DOM 的操作。
  activated       keep-alive 组件激活时调用。
  deactivated     keep-alive 组件停用时调用。
  beforeDestroy   实例销毁之前调用。在这一步，实例仍然完全可用。
  destroyed       Vue 实例销毁后调用。调用后，Vue 实例指示的所有东西都会解绑定，所有的事件监听器会被移除，所有的子实例也会被销毁。
